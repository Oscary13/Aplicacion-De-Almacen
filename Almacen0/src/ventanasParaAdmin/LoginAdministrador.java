/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ventanasParaAdmin;

import conexionPostsgresql.conexion;
import conexionPostsgresql.conexion1;
import conexionPostsgresql.crud;
import conexionPostsgresql.encrypt;
import getset.variables;
import static java.awt.Color.WHITE;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.ResultSet;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import ventanasParaOpera.MenuOperador;

/**
 *
 * @author oscar
 */
public class LoginAdministrador extends javax.swing.JFrame {

    FondoPanel fondo = new FondoPanel();

    /**
     * Creates new form LoginAdministrador
     */
    public LoginAdministrador() {
        this.setContentPane(fondo);

        initComponents();
        this.setLocationRelativeTo(null);
        setIconImage(getIconImage());
        //variables var = new variables();
        //crud crudd = new crud();
        //crudd.mostar(matricula_text.getText());
        //inicia_secion();
    }

    @Override

    public Image getIconImage() {
        Image retValue = Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource ("imagenes/TERMINADO.png"));
        return retValue;
    }
    
    public static String matriculaStatic = "";

    public static String matriculaOpera = "";
    public static String gradoOpera = "";
    public static String empleoOpera = "";
    public static String nombreOpera = "";
    public static String apellidosOpera = "";

    // Variables de los administrador 
    public static String matriculaAdmin = "";
    public static String gradoAdmin = "";
    public static String empleoAdmin = "";
    public static String nombreAdmin = "";
    public static String apellidosAdmin = "";

    public static int contador;

    public void limpiar() {
        matricula_text.setText(null);
        password_field_admin.setText(null);
    }
    CrearDB crearDB = new CrearDB();

    public void acceso() {

        crearDB.setVisible(true);
        crearDB.setLocationRelativeTo(null);
        this.setVisible(false);
    }

    public void inicia_secion() {

        //Se declaran variables a ocupar 
        String matricula, contraseña = "";
        matricula = matricula_text.getText();
        //Se generan condiciones para validar los datos y poder dar acceso al siguiente modulo
        if ("B6224817".equals(matricula_text.getText())) {
            if ("tenientecolorado".equals(new String(password_field_admin.getPassword()))) {
                acceso();
                con.conectar();
                JOptionPane.showMessageDialog(null, "NECESITA CREAR LA BASE DE DATOS Y LAS TABLAS", "NO EXISTE LA BASE DE DATOS", JOptionPane.ERROR_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "Datos incorrectos");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Datos incorrectos");
            limpiar();
        }
        limpiar();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        ingresar_btn = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        matricula_text = new javax.swing.JTextField();
        matricula_lb = new javax.swing.JLabel();
        titulo0_lb = new javax.swing.JLabel();
        password_field_admin = new javax.swing.JPasswordField();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        ingresar_btn.setFont(new java.awt.Font("Impact", 0, 24)); // NOI18N
        ingresar_btn.setText("INGRESAR");
        ingresar_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ingresar_btnActionPerformed(evt);
            }
        });
        jPanel1.add(ingresar_btn, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 270, -1, -1));

        jLabel3.setBackground(new java.awt.Color(102, 102, 255));
        jLabel3.setFont(new java.awt.Font("Impact", 0, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(51, 51, 0));
        jLabel3.setText("CONTRASEÑA:");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 180, -1, -1));

        matricula_text.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        matricula_text.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                matricula_textMousePressed(evt);
            }
        });
        matricula_text.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                matricula_textActionPerformed(evt);
            }
        });
        jPanel1.add(matricula_text, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 120, 278, 40));

        matricula_lb.setBackground(new java.awt.Color(102, 102, 255));
        matricula_lb.setFont(new java.awt.Font("Impact", 0, 24)); // NOI18N
        matricula_lb.setForeground(new java.awt.Color(51, 51, 0));
        matricula_lb.setText("MATRICULA:");
        jPanel1.add(matricula_lb, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 120, -1, -1));
        matricula_lb.getAccessibleContext().setAccessibleName("matricula_lb");

        titulo0_lb.setBackground(new java.awt.Color(255, 255, 255));
        titulo0_lb.setFont(new java.awt.Font("Impact", 1, 36)); // NOI18N
        titulo0_lb.setForeground(new java.awt.Color(51, 51, 0));
        titulo0_lb.setText("ALMACEN C.I.D.T.F.A.");
        jPanel1.add(titulo0_lb, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 20, -1, -1));
        titulo0_lb.getAccessibleContext().setAccessibleName("tiulo0_lb");

        password_field_admin.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        password_field_admin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                password_field_adminMousePressed(evt);
            }
        });
        password_field_admin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                password_field_adminActionPerformed(evt);
            }
        });
        jPanel1.add(password_field_admin, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 180, 280, 40));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 3, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("EMBEBIDOS © ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(135, 135, 135)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 527, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(145, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ingresar_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ingresar_btnActionPerformed

        if (matricula_text.getText().equals("")
                || new String(password_field_admin.getPassword()).equals("")) {
            JOptionPane.showMessageDialog(this, "Debes llenar todos los campos");
        } else {

            try {
                ResultSet rs3;
                java.sql.Statement st3;
                conexion conect = new conexion();
                Connection conexion = conect.conectar();
                st3 = conexion.createStatement();
                String sql = "SELECT COUNT(*) FROM administrador;";

                rs3 = st3.executeQuery(sql);
                if (rs3.next()) {
                    contador = rs3.getInt(1);
                    System.out.println(contador);
                }
            } catch (Exception e) {
                inicia_secion();
                //JOptionPane.showMessageDialog(null, "SIN Conexion", "Error en conexion", JOptionPane.ERROR_MESSAGE);
            }

            if (contador == 1) {

                System.out.println("HOLA: " + contador);
                java.sql.Statement st;
                java.sql.Statement st2;
                ResultSet rs;
                ResultSet rs2;

                variables var = new variables();
                //crud crudd = new crud();
                //crudd.mostar1(matricula_text.getText(), password_field_admin.getText());
                //password_field_admin.setText(var.getContraseña_opera());
                encrypt encrypt = new encrypt();
                String matricula = matricula_text.getText();
                matriculaStatic = matricula_text.getText();
                String contrasena = encrypt.getAES(new String(password_field_admin.getPassword()));
                try {
                    conexion conect = new conexion();
                    Connection conexion = conect.conectar();
                    st = conexion.createStatement();
                    String sql = "SELECT * FROM operador WHERE matricula_opera = '" + matricula + "' and contrasena_opera = '" + contrasena + "';";

                    rs = st.executeQuery(sql);

                    if (rs.next()) {
                        nombreOpera = rs.getString("nombre_opera");
                        gradoOpera = rs.getString("grado_opera");
                        empleoOpera = rs.getString("empleo_opera");
                        apellidosOpera = rs.getString("apellidos_opera");
                        matriculaOpera = rs.getString("matricula_opera");

                        String gata = rs.getString("cambiar_contra");
                        //JOptionPane.showMessageDialog(null, "Senecesita cambiar contraseña", "Sin registro", JOptionPane.INFORMATION_MESSAGE);
                        if ("1".equals(rs.getString("cambiar_contra"))) {
                            this.setVisible(false);
                            CambiarContraOpera cambiarContraa = new CambiarContraOpera();
                            cambiarContraa.setVisible(true);
                        } else {

                            MenuOperador menu = new MenuOperador();
                            menu.setVisible(true);
                            menu.setLocationRelativeTo(null);
                            this.setVisible(false);
                            System.out.println(rs.getString("cambiar_contra"));

                        }
                    } else {
                        //limpiar();

                        try {
                            String matricula2 = matricula_text.getText();
                            String contrasena2 = encrypt.getAES(new String(password_field_admin.getPassword()));
                            st2 = conexion.createStatement();
                            String sql2 = "SELECT * FROM administrador WHERE matricula_admin= '" + matricula2 + "' and contrasena_admin = '" + contrasena2 + "';";

                            rs2 = st2.executeQuery(sql2);

                            if (rs2.next()) {
                                nombreAdmin = rs2.getString("nombre_admin");
                                gradoAdmin = rs2.getString("grado_admin");
                                empleoAdmin = rs2.getString("empleo_admin");
                                apellidosAdmin = rs2.getString("apellidos_admin");
                                matriculaAdmin = rs2.getString("matricula_admin");

                                Menu_administrador menu = new Menu_administrador();
                                menu.setVisible(true);
                                menu.setLocationRelativeTo(null);
                                this.setVisible(false);
                            } else {
                                limpiar();

                            }
                            st.close();
                            conexion.close();
                        } catch (Exception e) {
                            //ActualizarDatosOperador ado = new ActualizarDatosOperador();
                            //ado.limpiar();

                            JOptionPane.showMessageDialog(null, "Error en el sistema de busqueda", "Error busqueda", JOptionPane.ERROR_MESSAGE);
                        }

                    }
                    st.close();
                    conexion.close();
                } catch (Exception e) {
                    //ActualizarDatosOperador ado = new ActualizarDatosOperador();
                    //ado.limpiar();

                    JOptionPane.showMessageDialog(null, "Error en el sistema de busqueda", "Error busqueda", JOptionPane.ERROR_MESSAGE);
                }

            } else {
                limpiar();

            }
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_ingresar_btnActionPerformed

    private void matricula_textActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_matricula_textActionPerformed
        password_field_admin.requestFocus();
    }//GEN-LAST:event_matricula_textActionPerformed

    private void matricula_textMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_matricula_textMousePressed

    }//GEN-LAST:event_matricula_textMousePressed

    private void password_field_adminMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_password_field_adminMousePressed

    }//GEN-LAST:event_password_field_adminMousePressed

    private void password_field_adminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_password_field_adminActionPerformed
        ingresar_btn.requestFocus();
        ingresar_btn.doClick();

    }//GEN-LAST:event_password_field_adminActionPerformed

    conexion con = new conexion();

    //Funcion que limpia las entradas de texto 
    //Funcion que permite iniciar secion al administrador 
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LoginAdministrador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LoginAdministrador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LoginAdministrador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LoginAdministrador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LoginAdministrador().setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ingresar_btn;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel matricula_lb;
    private javax.swing.JTextField matricula_text;
    private javax.swing.JPasswordField password_field_admin;
    private javax.swing.JLabel titulo0_lb;
    // End of variables declaration//GEN-END:variables

    class FondoPanel extends JPanel {

        private Image imagen;

        @Override
        public void paint(Graphics g) {
            imagen = new ImageIcon(getClass().getResource("/imagenes/c.jpg")).getImage();

            g.drawImage(imagen, 0, 0, getWidth(), getHeight(), this);

            setOpaque(false);

            super.paint(g);
        }
    }
}
